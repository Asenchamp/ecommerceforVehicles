# Generated by Django 5.1.5 on 2025-02-07 12:38

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_number', models.CharField(max_length=14, unique=True)),
                ('address', models.CharField(max_length=50)),
                ('account_status', models.CharField(choices=[('active', 'Active'), ('suspended', 'Suspended')], default='active', max_length=10)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_path', models.CharField(max_length=255)),
                ('entity_type', models.CharField(choices=[('Users', 'Users'), ('Vehicle', 'Vehicle'), ('Spareparts', 'Spareparts'), ('Service', 'Service')], max_length=15)),
                ('entity_id', models.PositiveIntegerField()),
                ('upload_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='KeyFeatures',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feature', models.CharField(max_length=20, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Make',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='PartType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=15, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='SubTypeOfService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='TypeOfService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('make', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vehicles.make')),
            ],
            options={
                'unique_together': {('make', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('start_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MaxValueValidator(0.01)])),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SubType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=15)),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vehicles.parttype')),
            ],
            options={
                'unique_together': {('type', 'name')},
            },
        ),
        migrations.CreateModel(
            name='SparePart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=20)),
                ('condition', models.CharField(choices=[('BRAND NEW', 'Brand New'), ('USED', 'Used')], max_length=15)),
                ('description', models.TextField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MaxValueValidator(0.01)])),
                ('make', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='vehicles.make')),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='vehicles.model')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='vehicles.parttype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('subtype', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='vehicles.subtype')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceSubTypeOfService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vehicles.service')),
                ('sub_type_of_service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vehicles.subtypeofservice')),
            ],
            options={
                'unique_together': {('service', 'sub_type_of_service')},
            },
        ),
        migrations.AddField(
            model_name='service',
            name='sub_services',
            field=models.ManyToManyField(through='vehicles.ServiceSubTypeOfService', to='vehicles.subtypeofservice'),
        ),
        migrations.AddField(
            model_name='subtypeofservice',
            name='type_of_service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vehicles.typeofservice'),
        ),
        migrations.AddField(
            model_name='service',
            name='type_of_service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vehicles.typeofservice'),
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1886), django.core.validators.MaxValueValidator(2025)])),
                ('color', models.CharField(choices=[('RED', 'Red'), ('WHITE', 'White'), ('BLACK', 'Black'), ('GREY', 'Grey')], max_length=15)),
                ('interior_color', models.CharField(choices=[('RED', 'Red'), ('WHITE', 'White'), ('BLACK', 'Black'), ('GREY', 'Grey')], max_length=15)),
                ('condition', models.CharField(choices=[('BRAND NEW', 'Brand New'), ('USED', 'Used')], max_length=15)),
                ('transmission', models.CharField(choices=[('AUTOMATIC', 'Automatic'), ('MANUAL', 'Manual')], max_length=15)),
                ('description', models.TextField()),
                ('for_sale_or_rent', models.CharField(choices=[('SALE', 'Sale'), ('RENT', 'Rent')], max_length=15)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MaxValueValidator(0.01)])),
                ('rate', models.CharField(choices=[('DAILY', 'Daily'), ('WEEKLY', 'Weekly'), ('MONTHLY', 'Monthly'), ('YEARLY', 'Yearly')], max_length=15)),
                ('fuel_type', models.CharField(choices=[('DIESEL', 'Diesel'), ('PETROL', 'Petrol'), ('SOLAR', 'Solar')], max_length=15)),
                ('make', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='vehicles.make')),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='vehicles.model')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Vehiclekeyfeatures',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feature', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vehicles.keyfeatures')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vehicles.vehicle')),
            ],
            options={
                'unique_together': {('vehicle', 'feature')},
            },
        ),
        migrations.AddField(
            model_name='vehicle',
            name='key_features',
            field=models.ManyToManyField(through='vehicles.Vehiclekeyfeatures', to='vehicles.keyfeatures'),
        ),
        migrations.AlterUniqueTogether(
            name='subtypeofservice',
            unique_together={('type_of_service', 'name')},
        ),
    ]
